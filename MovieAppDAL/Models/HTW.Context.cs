//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieAppDAL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HTWEntities : DbContext
    {
        public HTWEntities()
            : base("name=HTWEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MV_MOVIE> MV_MOVIE { get; set; }
        public virtual DbSet<MV_NumberUsersLike> MV_NumberUsersLike { get; set; }
        public virtual DbSet<PS_USERS> PS_USERS { get; set; }
    
        public virtual ObjectResult<SP_GetListMovie_Result> SP_GetListMovie(Nullable<int> id, string keySearch, Nullable<System.DateTime> releaseDateTo, Nullable<System.DateTime> releaseDateFrom, Nullable<int> pageNumber, Nullable<int> rowspPage, string sortName, string sortDirection)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var keySearchParameter = keySearch != null ?
                new ObjectParameter("KeySearch", keySearch) :
                new ObjectParameter("KeySearch", typeof(string));
    
            var releaseDateToParameter = releaseDateTo.HasValue ?
                new ObjectParameter("ReleaseDateTo", releaseDateTo) :
                new ObjectParameter("ReleaseDateTo", typeof(System.DateTime));
    
            var releaseDateFromParameter = releaseDateFrom.HasValue ?
                new ObjectParameter("ReleaseDateFrom", releaseDateFrom) :
                new ObjectParameter("ReleaseDateFrom", typeof(System.DateTime));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var rowspPageParameter = rowspPage.HasValue ?
                new ObjectParameter("RowspPage", rowspPage) :
                new ObjectParameter("RowspPage", typeof(int));
    
            var sortNameParameter = sortName != null ?
                new ObjectParameter("SortName", sortName) :
                new ObjectParameter("SortName", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetListMovie_Result>("SP_GetListMovie", idParameter, keySearchParameter, releaseDateToParameter, releaseDateFromParameter, pageNumberParameter, rowspPageParameter, sortNameParameter, sortDirectionParameter);
        }
    }
}
